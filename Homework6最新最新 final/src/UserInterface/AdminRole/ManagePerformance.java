/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminRole;

import Business.Business;
import Business.Customer;
import Business.Market;
import Business.MarketList;
import Business.MasterOrdercatalog;
import Business.Order;
import Business.OrderItem;
import Business.Product;
import Business.SalesPersonCatalog;
import Business.Salesperson;
import Business.Supplier;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import UserInterface.AdminRole.Tpoperson;
import java.util.Collections;
import java.util.Comparator;

/**
 *
 * @author yangjing
 */


public class ManagePerformance extends javax.swing.JPanel {

    /**
     * Creates new form ManagePerformance
     */
    private Business business;
    private JPanel userProcessContainer;
    private MarketList marketList;
    private MasterOrdercatalog masterOrdercatalog;
    private Market market;
    private SalesPersonCatalog salesPersonCatalog;
    double total;
    public ManagePerformance(JPanel userProcessContainer, Business business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.business=business;
        salesPersonCatalog=business.getSalesPersonCatalog();
         masterOrdercatalog=business.getMasterOrdercatalog();
         marketList=business.getMarketList();
         ordermoney();
         populatemarketSupplierCombo();
         
    }
      public void populatemarketSupplierCombo(){
        marketComboBox.removeAllItems();
        
        for(Market market:marketList.getMarketListcatelog()){
            marketComboBox.addItem(market);
            
        }
    }
      
      
       public void ordermoney(){
        double money=0.0;
        
        for (Order order:masterOrdercatalog.getOrdercatelog()){
                
           
                money=money+order.getOrderRevenue();
           
        
                }
        moneyTF.setText(String.valueOf(money));
    }
        public void ordermarketmoney(){
        double money=0.0;
        Market market= (Market) marketComboBox.getSelectedItem();
        for (Order order:market.getOrderlist()){
                
           
                money=money+order.getOrderRevenue();
           
        
                }
        marketTF.setText(String.valueOf(money));
    }
         public void showpersontpo(ArrayList<Salesperson>salespersoncatelog)
    {  
         ArrayList<Salesperson>findSalespersons=new ArrayList<Salesperson>();
         
         for(Salesperson salesperson:salespersoncatelog)
         {if(!findSalespersons.contains(salesperson))
         {findSalespersons.add(salesperson);}
         }
         
         
        DefaultTableModel jTable =(DefaultTableModel)personTB.getModel();
        jTable.setRowCount(0);
        int i=0;
        for (Salesperson salesperson:findSalespersons) {
           
       Object row[]=new Object[2];
             row[0]=salesperson;
             row[1]=salesperson.getMarketrevenue();
           
        jTable.addRow(row);
        
          
        }
       
    }


    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        marketComboBox = new javax.swing.JComboBox();
        top10makrte1Btn = new javax.swing.JButton();
        moneyTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        marketTF = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        personTB = new javax.swing.JTable();
        TPO3btn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        productTB = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(600, 800));
        setLayout(new java.awt.BorderLayout());

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel4.setText("Market");

        marketComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marketComboBoxActionPerformed(evt);
            }
        });

        top10makrte1Btn.setText("Top 10 ");
        top10makrte1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                top10makrte1BtnActionPerformed(evt);
            }
        });

        jLabel1.setText("TotalRevenue:");

        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        marketTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marketTFActionPerformed(evt);
            }
        });

        jButton2.setText("above target");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setLabel("below target");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        personTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(personTB);

        TPO3btn.setText("TPO3");
        TPO3btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TPO3btnActionPerformed(evt);
            }
        });

        productTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProductName", "revenue", "gap"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(productTB);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(TPO3btn)))
                        .addGap(87, 87, 87)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(44, 44, 44)
                                .addComponent(moneyTF, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(27, 27, 27)
                                .addComponent(marketComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(marketTF, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(top10makrte1Btn)))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(moneyTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(marketComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(marketTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(top10makrte1Btn)
                        .addGap(56, 56, 56)
                        .addComponent(jButton2)
                        .addGap(49, 49, 49)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TPO3btn)
                        .addGap(170, 170, 170))))
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void top10makrte1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_top10makrte1BtnActionPerformed
         ArrayList<Salesperson>findSalespersons=new ArrayList<Salesperson>();
        Market market= (Market) marketComboBox.getSelectedItem();
        Tpoperson tpoperson=new Tpoperson(userProcessContainer,business,market);
                userProcessContainer.add("Tpoperson",tpoperson);
                CardLayout layout=(CardLayout)userProcessContainer.getLayout();
                layout.show(userProcessContainer,"Tpoperson"); 
    }//GEN-LAST:event_top10makrte1BtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout =(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void marketTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marketTFActionPerformed
     
    }//GEN-LAST:event_marketTFActionPerformed

    private void marketComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marketComboBoxActionPerformed
        ordermarketmoney();
    }//GEN-LAST:event_marketComboBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ArrayList<Salesperson>gsalesperson =new ArrayList<Salesperson>();
       
       gsalesperson.addAll(salesPersonCatalog.getSalesPersonList());
        for(Order order: masterOrdercatalog.getOrdercatelog())
        {
          
            if(order.getGaptarget()<=0)
            {
                
                gsalesperson.remove(order.getSalesperson());
            }
                
                
        }showpersontpo(gsalesperson);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       ArrayList<Salesperson>gsalesperson =new ArrayList<Salesperson>();
       
        gsalesperson.addAll(salesPersonCatalog.getSalesPersonList());
        for(Order order: masterOrdercatalog.getOrdercatelog())
        {
          
            if(order.getGaptarget()>=0)
            {
                
                gsalesperson.remove(order.getSalesperson());
            }
                
                
        }showpersontpo(gsalesperson);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void TPO3btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TPO3btnActionPerformed
       ArrayList<Product>findProducts=new ArrayList<Product>();
        for(Supplier s :business.getSupplierDirectory().getSupplierlist()){
           for(Product p : s.getProductCatalog().getProductcatalog()){
               double revenue = 0.0;
               double gap = 0.0;
               for(Order o : business.getMasterOrdercatalog().getOrdercatelog()){
                   
                   for(OrderItem oi: o.getOrderItemlist()){
                       
                       if(oi.getProduct().getModelNumber()==(p.getModelNumber())){
                         
                           revenue += oi.getSalesprice() * oi.getQuantity();
                           gap += oi.getQuantity()*(oi.getSalesprice()-oi.getProduct().getTargetPrice());
                       }
                   }
               }
               findProducts.add(p);
               p.setRevenue(revenue);
               p.setGap(gap);
               
           }
           
       }
       Collections.sort(findProducts,new Comparator<Product>(){
           public int compare(Product p1,Product p2){
               return Double.compare(p2.getRevenue(), p1.getRevenue());
           }
       });
        DefaultTableModel jTable =(DefaultTableModel)productTB.getModel();
        jTable.setRowCount(0);
        int i=0;
//        
            for(Product product:findProducts)
            {
                if(product.getRevenue()!=0)
                {
                     i++;
              Object row[]=new Object[3];
                  row[0]=product.getProdName();
                 row[1]=product.getRevenue();
                 row[2]=product.getGap();
           
                jTable.addRow(row);
                if(i ==3)
                    return ;
                }
            }
       
        
      
      
    }//GEN-LAST:event_TPO3btnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton TPO3btn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox marketComboBox;
    private javax.swing.JTextField marketTF;
    private javax.swing.JTextField moneyTF;
    private javax.swing.JTable personTB;
    private javax.swing.JTable productTB;
    private javax.swing.JButton top10makrte1Btn;
    // End of variables declaration//GEN-END:variables
}
