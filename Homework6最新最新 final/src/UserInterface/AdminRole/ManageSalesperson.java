/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminRole;

import Business.*;
import Business.Salesperson;
import Business.SupplierDirectory;
import java.awt.CardLayout;
import java.awt.List;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author james
 */
public class ManageSalesperson extends javax.swing.JPanel {

    /**
     * Creates new form ManageSalesperson
     */
      private  JPanel userProcessContainer;
    
    private Business business;
    private SalesPersonCatalog salesPersonCatalog;
    private MarketList marketList;
    private MasterOrdercatalog masterOrdercatalog;
    private Market market;
    double total;
   

    public ManageSalesperson(JPanel userProcessContainer, Business business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.business=business;
        salesPersonCatalog=business.getSalesPersonCatalog();
         masterOrdercatalog=business.getMasterOrdercatalog();
         marketList=business.getMarketList();
        
        salespersonmoney();
        
       
        populateTable();
//        totalrevenue();
       
    }
    public void salespersonmoney(){
        double money=0.0;
        for(Salesperson salesperson:salesPersonCatalog.getSalesPersonList())
        {
        for (Order order:masterOrdercatalog.getOrdercatelog()){
                
            if(order.getSalesperson().getName().equals(salesperson.getName()))
                money=money+order.getOrderRevenue();
            
        }salesperson.setTotalrevenue(money);
        money=0.0;
        
                }
    }
//      public void totalrevenue(){
//        double money=0.0;
//        for(Salesperson salesperson:salesPersonCatalog.getSalesPersonList())
//        {
//        for (Order order:masterOrdercatalog.getOrdercatelog()){
//                
//            if(order.getSalesperson().getName().equals(salesperson.getName()))
//                money=money+order.getOrderRevenue();
//            
//        }
//         total=money;
//        
//                }
//    }
      
     
    public void populateTable()
    { double money=0.0;
    double reward=0.0;
        DefaultTableModel dtm =(DefaultTableModel)personTB.getModel();
        dtm.setRowCount(0);    
        
       
        
        for(Salesperson salesperson:salesPersonCatalog.getSalesPersonList())
        {
            reward=business.salespersonreward(salesperson);
            salesperson.setReward(reward);
            Object row[]=new Object[3];
            row[0]=salesperson;
           row[1]=salesperson.getTotalrevenue();
           row[2]=salesperson.getReward();
           money=money+salesperson.getTotalrevenue();
            
            dtm.addRow(row);}
        total=money;
        TotalTF.setText(String.valueOf(total));
            
    }
       public void showperson(ArrayList<Salesperson>salespersoncatelog)
    {
        DefaultTableModel jTable =(DefaultTableModel)personTB.getModel();
        jTable.setRowCount(0);
        for (Salesperson salesperson:salespersoncatelog) {

       Object row[]=new Object[2];
             row[0]=salesperson;
             row[1]=salesperson.getTotalrevenue();
           
        jTable.addRow(row);
          }
    }
          public void showpersontpo(ArrayList<Salesperson>salespersoncatelog)
    {  

        
        DefaultTableModel jTable =(DefaultTableModel)personTB.getModel();
        jTable.setRowCount(0);
        for (Salesperson salesperson:salespersoncatelog) {

       Object row[]=new Object[2];
             row[0]=salesperson;
             row[1]=salesperson.getTotalrevenue();
           
        jTable.addRow(row);
          }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        NameTF = new javax.swing.JTextField();
        UpdateBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        personTB = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrderTB = new javax.swing.JTable();
        ViewBtn = new javax.swing.JButton();
        findBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        newBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnViewDtails = new javax.swing.JButton();
        TotalTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jLabel2.setText("Name:");

        UpdateBtn.setText("Update Person");
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });

        personTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "revenue", "reward"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(personTB);
        if (personTB.getColumnModel().getColumnCount() > 0) {
            personTB.getColumnModel().getColumn(0).setResizable(false);
            personTB.getColumnModel().getColumn(1).setResizable(false);
            personTB.getColumnModel().getColumn(2).setResizable(false);
        }

        OrderTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrderID", "OrderRevenue"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(OrderTB);
        if (OrderTB.getColumnModel().getColumnCount() > 0) {
            OrderTB.getColumnModel().getColumn(0).setResizable(false);
            OrderTB.getColumnModel().getColumn(1).setResizable(false);
        }

        ViewBtn.setText("View");
        ViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBtnActionPerformed(evt);
            }
        });

        findBtn.setText("Find Person");
        findBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        newBtn.setText("New Person");
        newBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtnActionPerformed(evt);
            }
        });

        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("Manage SalesPerson Directory");

        btnViewDtails.setText("View OrderDetails");
        btnViewDtails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDtailsActionPerformed(evt);
            }
        });

        jLabel3.setText("TotalRevenue:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButton1)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TotalTF, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(NameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addComponent(findBtn))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(UpdateBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ViewBtn)
                                .addGap(24, 24, 24)
                                .addComponent(newBtn)
                                .addGap(18, 18, 18)
                                .addComponent(deleteBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnViewDtails)))))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(NameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(findBtn)
                        .addGap(160, 160, 160)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(TotalTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateBtn)
                    .addComponent(ViewBtn)
                    .addComponent(newBtn)
                    .addComponent(deleteBtn)
                    .addComponent(btnViewDtails))
                .addGap(22, 22, 22))
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        int selectedrow=personTB.getSelectedRow();
        if(selectedrow>=0){  
            Salesperson salesperson =(Salesperson)personTB.getValueAt(selectedrow,0);
            //System.err.println(salesperson.getPassword());
        UpdateSalesPersonJPanel jPanel=new UpdateSalesPersonJPanel(userProcessContainer,business,salesperson);
        userProcessContainer.add("UpdateSalesPersonJPanel",jPanel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.show(userProcessContainer,"UpdateSalesPersonJPanel");
        }
        else  JOptionPane.showMessageDialog(null,"Select any row");

    }//GEN-LAST:event_UpdateBtnActionPerformed

    private void ViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBtnActionPerformed
        double money=0.0;
        int selectedrow=personTB.getSelectedRow();
        if(selectedrow>=0){
            Salesperson salesperson =(Salesperson)personTB.getValueAt(selectedrow,0);
            DefaultTableModel jTable =(DefaultTableModel)OrderTB.getModel();
            jTable.setRowCount(0);
            Object row[]=new Object[2]; 
           
            for (Order order:masterOrdercatalog.getOrdercatelog()){
                
            if(order.getSalesperson().getName().equals(salesperson.getName()))
            {row[0]=order;
            row[1]=order.getOrderRevenue();
               money=money+order.getOrderRevenue();
             jTable.addRow(row);}
            }
            salesperson.setTotalrevenue(money);
            populateTable();
            }
         else  JOptionPane.showMessageDialog(null,"select a row");
    }//GEN-LAST:event_ViewBtnActionPerformed

    private void findBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findBtnActionPerformed
        ArrayList<Salesperson>findperson =new ArrayList<>();
        if(!(NameTF.getText().isEmpty()))
        {
            
                for(Salesperson salesperson:salesPersonCatalog.getSalesPersonList())
                {
                    if((salesperson.getName().equals(NameTF.getText())))
                    {
                        findperson.add(salesperson);
                    }
                }showperson(findperson);
        }
        else  JOptionPane.showMessageDialog(null,"error");
    }//GEN-LAST:event_findBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        ArrayList<Order>findorder =new ArrayList<>();
        int selectedrow=personTB.getSelectedRow();
        if(selectedrow>=0){
            Salesperson salesperson =(Salesperson)personTB.getValueAt(selectedrow,0);
            salesPersonCatalog=business.getSalesPersonCatalog();
            MasterOrdercatalog masterOrdercatalog=business.getMasterOrdercatalog();
            for (Order order:masterOrdercatalog.getOrdercatelog())
            {if(!((order.getSalesperson().getName().equals(salesperson.getName()))))
                {findorder.add(order);}

            }
            business.getMasterOrdercatalog().setOrdercatelog(findorder);
            salesPersonCatalog.removeSalesperson(salesperson);

            populateTable();

        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void newBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtnActionPerformed
        AddSalesPerson asp=new AddSalesPerson(userProcessContainer,business,salesPersonCatalog);
        userProcessContainer.add("AddSalesPerson",asp);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.show(userProcessContainer,"AddSalesPerson");
    }//GEN-LAST:event_newBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout =(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnViewDtailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDtailsActionPerformed
        // TODO add your handling code here:
        int selectedrow=OrderTB.getSelectedRow();
        if(selectedrow>=0){
              Order order =(Order)OrderTB.getValueAt(selectedrow,0);
            
              OrderDetailsJPanel jpanel=new OrderDetailsJPanel(userProcessContainer,order);
                userProcessContainer.add("OrderDetailsJPanel",jpanel);
                CardLayout layout=(CardLayout)userProcessContainer.getLayout();
                layout.show(userProcessContainer,"OrderDetailsJPanel"); 
        } 
    
    }//GEN-LAST:event_btnViewDtailsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NameTF;
    private javax.swing.JTable OrderTB;
    private javax.swing.JTextField TotalTF;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JButton ViewBtn;
    private javax.swing.JButton btnViewDtails;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton findBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton newBtn;
    private javax.swing.JTable personTB;
    // End of variables declaration//GEN-END:variables
}
